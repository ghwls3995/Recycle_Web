buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

repositories {
    mavenCentral()
    //결제 포트원, 아임포트 추가
    maven { url 'https://jitpack.io' }
}

dependencies {

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // or jjwt-gson

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // 공통 레이아웃 기능 이용하기.
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.1.0'

    // 모델 맵퍼 도구 설치.
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0'

    // 장고 레스트 확인용
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.mongodb:mongodb-driver-sync'

    // Spring WebFlux 비동기 요청
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // OkHttp dependency
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'

    // 결제 모듈
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'

    // 서버에서 유효성 체크 도구.
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Querydsl 도구 설치.
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"

    // 소셜 로그인 쉽게 도와주는 도구.
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Swagger UI, RESTful 테스트를 위한 화면 제공 툴.
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'

    // http 통신
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:httpmime:4.5.13'

    // Log4j2 추가
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'

    // springsecurity (로그아웃 sec:authorize="isAnonymous()" 위함)
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

compileJava.dependsOn('clean')
